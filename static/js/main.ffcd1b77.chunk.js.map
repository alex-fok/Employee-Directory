{"version":3,"sources":["utils/getEmployeesAPI.js","components/EmployeeTable/index.js","utils/capitalize.js","components/SortDropdown/index.js","components/OrderDropdown/index.js","components/SortOptions/index.js","components/FilterInput/index.js","App.js","index.js"],"names":["getEmployeesAPI","axios","get","EmployeeTableItem","name","email","username","picture","alt","src","first","last","EmployeeTable","props","Table","striped","bordered","hover","employees","map","e","i","employee","login","medium","capitalize","str","charAt","toUpperCase","slice","SortDropDown","DropdownButton","title","sortBy","onSelect","sort","variant","DropdownItem","eventKey","OrderDropdown","orderBy","order","id","SortOptions","sortCategory","handleSort","sortOrder","handleOrder","Col","SortDropdown","FilterInput","filterCategory","handleFilterWord","handleFilterCategory","sm","InputGroup","FormControl","type","placeholder","onChange","target","value","Append","App","useState","all","setAll","setEmployees","setSortCat","setSortOrder","filterWord","setFilterWord","setFilterCat","useEffect","a","getEmployeeAPI","data","error","console","log","results","sortEmployees","category","sortByCat","ascend","b","localeCompare","descend","filterEmployees","keyword","filter","toLowerCase","includes","Container","Row","className","prev","reverse","input","word","trim","length","ReactDOM","render","document","getElementById"],"mappings":"gLAIeA,EAFS,kBAAMC,IAAMC,IAAI,sD,+BCClCC,EAAoB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAClD,OACE,+BACE,6BAAI,qBAAKC,IAAKF,EAAUG,IAAKF,MAC7B,6BAAKD,IACL,uCAAQF,EAAKM,MAAb,YAAsBN,EAAKO,QAC3B,6BAAKN,QAgCIO,EA3BO,SAACC,GACrB,OACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,iDACA,0CACA,sCACA,4CAGJ,gCACIJ,EAAMK,UAAUC,KAAI,SAACC,EAAGC,GAAJ,OACpB,cAAC,EAAD,CACEC,SAAUF,EACVhB,KAAMgB,EAAEhB,KACRC,MAAOe,EAAEf,MACTC,SAAUc,EAAEG,MAAMjB,SAClBC,QAASa,EAAEb,QAAQiB,QACdH,Y,uBC/BFI,EAFI,SAACC,GAAD,OAASA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,ICiBrDC,EAbM,SAACjB,GACpB,OACE,eAACkB,EAAA,EAAD,CACEC,MAAK,kBAAanB,EAAMoB,OAASR,EAAWZ,EAAMoB,QAAU,IAC5DC,SAAUrB,EAAMsB,KAChBC,QAAQ,oBAHV,UAKE,cAACC,EAAA,EAAD,CAAcC,SAAS,OAAvB,kBACA,cAACD,EAAA,EAAD,CAAcC,SAAS,WAAvB,sBACA,cAACD,EAAA,EAAD,CAAcC,SAAS,QAAvB,uBCMSC,EAfO,SAAC1B,GACrB,OACE,eAACkB,EAAA,EAAD,CACEC,MAAK,mBAAcP,EAAWZ,EAAM2B,UACpCN,SAAUrB,EAAM4B,MAChBL,QAAQ,oBACRM,GAAG,QAJL,UAME,cAACL,EAAA,EAAD,CAAcC,SAAS,SAAvB,oBACA,cAACD,EAAA,EAAD,CAAcC,SAAS,UAAvB,yBCYSK,EAnBK,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YACzD,OACE,eAAC,WAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAD,CACEd,KAAMU,EACNZ,OAAQW,MAGZ,cAACI,EAAA,EAAD,UACE,cAAC,EAAD,CACER,QAASM,EACTL,MAAOM,U,gBCaFG,EAxBK,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,eAAgBC,EAA4C,EAA5CA,iBAAkBC,EAA0B,EAA1BA,qBACtD,OACE,cAACL,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,aACZC,SAAU,SAAAvC,GAAC,OAAIgC,EAAiBhC,EAAEwC,OAAOC,UAE3C,cAACN,EAAA,EAAWO,OAAZ,UACE,eAAC/B,EAAA,EAAD,CACEK,QAAQ,oBACRJ,MAAK,oBAAemB,EAAiB1B,EAAW0B,GAAiB,IACjEjB,SAAUmB,EAHZ,UAKE,cAAChB,EAAA,EAAD,CAAcC,SAAS,OAAvB,kBACA,cAACD,EAAA,EAAD,CAAcC,SAAS,WAAvB,sBACA,cAACD,EAAA,EAAD,CAAcC,SAAS,QAAvB,8BCwFGyB,EAxGH,WAAM,MAEMC,mBAAS,IAFf,mBAETC,EAFS,KAEJC,EAFI,OAIkBF,mBAAS,IAJ3B,mBAIT9C,EAJS,KAIEiD,EAJF,OAMmBH,qBANnB,mBAMTpB,EANS,KAMKwB,EANL,OAOkBJ,mBAAS,UAP3B,mBAOTlB,EAPS,KAOEuB,EAPF,OAQoBL,mBAAS,IAR7B,mBAQTM,EARS,KAQGC,EARH,OASuBP,mBAAS,QAThC,mBASTb,EATS,KASOqB,EATP,KAWhBC,qBAAU,WAER,sBAAC,8BAAAC,EAAA,sEACyBC,IADzB,qBACSC,EADT,EACSA,MAECC,MAHV,yCAGwBC,QAAQC,IAAIH,EAAKC,QAHzC,OAICX,EAAOU,EAAKI,SACZb,EAAaS,EAAKI,SALnB,0CAAD,KAOA,IAEF,IAAMC,EAAgB,SAACC,GAAiC,IAAvBzC,EAAsB,uDAAdK,EACjCqC,EAAY,CAChB,KAAQ,CACNC,OAAO,SAACV,EAAGW,GAAJ,OAAUX,EAAEtE,KAAKM,MAAM4E,cAAcD,EAAEjF,KAAKM,QACnD6E,QAAS,SAACb,EAAGW,GAAJ,OAAUA,EAAEjF,KAAKM,MAAM4E,cAAcZ,EAAEtE,KAAKM,SAEvD,SAAY,CACV0E,OAAQ,SAACV,EAAGW,GAAJ,OAAUX,EAAEnD,MAAMjB,SAASgF,cAAcD,EAAE9D,MAAMjB,WACzDiF,QAAS,SAACb,EAAGW,GAAJ,OAAUA,EAAE9D,MAAMjB,SAASgF,cAAcZ,EAAEnD,MAAMjB,YAE5D,MAAS,CACP8E,OAAQ,SAACV,EAAGW,GAAJ,OAAUX,EAAErE,MAAMiF,cAAcD,EAAEhF,QAC1CkF,QAAS,SAACb,EAAGW,GAAJ,OAAUA,EAAEhF,MAAMiF,cAAcZ,EAAErE,UAG/C,OAAOa,EAAUW,QAAQM,KAAKgD,EAAUD,GAAUzC,KAG9C+C,EAAkB,SAACtE,EAAWuE,EAASP,GAC3C,IAAMQ,EAAS,CACb,KAAQ,SAAAtE,GAAC,OAAIA,EAAEhB,KAAKM,MAAMiF,cAAcC,SAASH,EAAS,IAC1D,SAAY,SAAArE,GAAC,OAAIA,EAAEG,MAAMjB,SAASqF,cAAcC,SAASH,EAAS,IAClE,MAAS,SAAArE,GAAC,OAAIA,EAAEf,MAAMsF,cAAcC,SAASH,EAAS,KAExD,OAAOvE,EAAUwE,OAAOA,EAAOR,KAqCjC,OACE,eAACW,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,UAAU,OAAf,UACE,cAAC,EAAD,CACEnD,aAAcA,EACdE,UAAWA,EACXD,WAxCW,SAACqC,GACdA,IAAatC,IAEjBwB,EAAWc,GACXf,EAAac,EAAcC,MAqCrBnC,YAlCY,SAACN,GACfA,IAAUK,IAEduB,EAAa5B,GAET0B,EADJvB,EACiBqC,EAAcrC,EAAcH,GAC5B,SAAAuD,GAAI,OAAIA,EAAKC,gBA8B1B,cAAC,EAAD,CACE9C,eAAgBA,EAChBC,iBA7BiB,SAAC8C,GACxB,IAAMC,EAAOD,EAAME,OAAOT,cAC1BpB,EAAc4B,EAAKR,eAEnBQ,EAAKE,OAAS,GAAKlD,EACfgB,GAAa,SAAA6B,GAAI,OAAIR,EAAgBQ,EAAMG,EAAMhD,MACjDgB,EAAaF,IAwBXZ,qBArBqB,SAAC6B,GACxBA,IAAa/B,IAEjBqB,EAAaU,GAETZ,EAAW+B,OAAS,GACtBlC,GAAa,SAAA6B,GAAI,OAAIR,EAAgBQ,EAAM1B,EAAYY,aAkBvD,cAACY,EAAA,EAAD,UACE,cAAC,EAAD,CAAe5E,UAAWA,U,MCvGlCoF,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ffcd1b77.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst getEmployeesAPI = () => axios.get(\"https://randomuser.me/api/?format=json&results=50\");\n\nexport default getEmployeesAPI;\n","\nimport Table from 'react-bootstrap/Table';\n\nconst EmployeeTableItem = ({ name, email, username, picture }) => {\n  return (\n    <tr>\n      <td><img alt={username} src={picture}/></td>\n      <td>{username}</td>\n      <td>{`${name.first} ${name.last}`}</td>\n      <td>{email}</td>\n    </tr>\n  )\n}\n\nconst EmployeeTable = (props) => {\n  return(\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>Profile Picutre</th>\n          <th>Username</th>\n          <th>Name</th>\n          <th>Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        { props.employees.map((e, i) => \n          <EmployeeTableItem\n            employee={e}\n            name={e.name}\n            email={e.email}\n            username={e.login.username}\n            picture={e.picture.medium}\n            key={i}\n          />\n        ) }\n      </tbody>\n    </Table>\n  );\n}\n\nexport default EmployeeTable;","const capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\nexport default capitalize;","import DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\nimport capitalize from '../../utils/capitalize';\r\n\r\nconst SortDropDown = (props) => {\r\n  return (\r\n    <DropdownButton\r\n      title={`Sort By ${props.sortBy ? capitalize(props.sortBy) : ''}`}\r\n      onSelect={props.sort}\r\n      variant='outline-secondary'\r\n    >\r\n      <DropdownItem eventKey='name'>Name</DropdownItem>\r\n      <DropdownItem eventKey='username'>Username</DropdownItem>\r\n      <DropdownItem eventKey='email'>Email</DropdownItem>\r\n    </DropdownButton>\r\n  );\r\n}\r\nexport default SortDropDown;","import DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\nimport capitalize from '../../utils/capitalize';\r\n\r\nconst OrderDropdown = (props) => {\r\n  return (\r\n    <DropdownButton\r\n      title={`Order By ${capitalize(props.orderBy)}`}\r\n      onSelect={props.order}\r\n      variant='outline-secondary'\r\n      id=\"order\"\r\n    >\r\n      <DropdownItem eventKey='ascend'>Ascend</DropdownItem>\r\n      <DropdownItem eventKey='descend'>Descend</DropdownItem>\r\n    </DropdownButton>\r\n  );\r\n}\r\n\r\n\r\nexport default OrderDropdown;","\nimport {Fragment} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport SortDropdown from '../SortDropdown';\nimport OrderDropdown from '../OrderDropdown';\n\nconst SortOptions = ({sortCategory, handleSort, sortOrder, handleOrder}) => {\n  return (\n    <Fragment>\n      <Col>\n        <SortDropdown\n          sort={handleSort}\n          sortBy={sortCategory}\n        />\n      </Col>\n      <Col>\n        <OrderDropdown\n          orderBy={sortOrder}\n          order={handleOrder}\n        />\n      </Col>\n    </Fragment>\n  )\n}\n\nexport default SortOptions;","import FormControl from 'react-bootstrap/FormControl';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport DropdownItem from 'react-bootstrap/DropdownItem';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Col from 'react-bootstrap/Col';\nimport capitalize from '../../utils/capitalize';\n\nconst FilterInput = ({filterCategory, handleFilterWord, handleFilterCategory}) => {\n  return (\n    <Col sm={5}>\n      <InputGroup>\n        <FormControl\n          type='text'\n          placeholder='Keyword...'\n          onChange={e => handleFilterWord(e.target.value)}\n        />\n        <InputGroup.Append>\n          <DropdownButton\n            variant='outline-secondary'\n            title={`Filter By ${filterCategory ? capitalize(filterCategory): ''}`}\n            onSelect={handleFilterCategory}\n          >\n            <DropdownItem eventKey='name'>Name</DropdownItem>\n            <DropdownItem eventKey='username'>Username</DropdownItem>\n            <DropdownItem eventKey='email'>Email</DropdownItem>\n          </DropdownButton>\n        </InputGroup.Append>\n      </InputGroup>\n    </Col>\n  );\n}\nexport default FilterInput;","import { useEffect, useState } from 'react';\nimport getEmployeeAPI from './utils/getEmployeesAPI';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport EmployeeTable from './components/EmployeeTable';\nimport SortOptions from './components/SortOptions';\nimport FilterInput from './components/FilterInput';\n\nconst App = () => {\n  // variable 'all' stores all employees fetched from API\n  const [all, setAll] = useState([]);\n  // variable 'employees' represents the employees being displayed\n  const [employees, setEmployees] = useState([]);\n\n  const [sortCategory, setSortCat] = useState();\n  const [sortOrder, setSortOrder] = useState('ascend');\n  const [filterWord, setFilterWord] = useState('');\n  const [filterCategory, setFilterCat] = useState('name');\n\n  useEffect(() => {\n    // execute anonymus async function for getting all employees\n    (async() => {\n      const { data } = (await getEmployeeAPI());\n      \n      if (data.error) return console.log(data.error);\n      setAll(data.results);\n      setEmployees(data.results);\n    })();\n  },[]);\n\n  const sortEmployees = (category, order = sortOrder) => {\n    const sortByCat = {\n      'name': {\n        ascend:(a, b) => a.name.first.localeCompare(b.name.first),\n        descend: (a, b) => b.name.first.localeCompare(a.name.first)\n      },\n      'username': {\n        ascend: (a, b) => a.login.username.localeCompare(b.login.username),\n        descend: (a, b) => b.login.username.localeCompare(a.login.username)\n      },\n      'email': {\n        ascend: (a, b) => a.email.localeCompare(b.email),\n        descend: (a, b) => b.email.localeCompare(a.email)\n      }\n    }\n    return employees.slice().sort(sortByCat[category][order]);\n  }\n\n  const filterEmployees = (employees, keyword, category) => {\n    const filter = {\n      'name': e => e.name.first.toLowerCase().includes(keyword, 0),\n      'username': e => e.login.username.toLowerCase().includes(keyword, 0),\n      'email': e => e.email.toLowerCase().includes(keyword, 0)\n    }\n    return employees.filter(filter[category])\n  }\n\n  const handleSort = (category) => {\n    if (category === sortCategory) return;\n\n    setSortCat(category);\n    setEmployees(sortEmployees(category));\n  }    \n\n  const handleOrder = (order) => {\n    if (order === sortOrder) return;\n    \n    setSortOrder(order);\n    sortCategory\n      ? setEmployees(sortEmployees(sortCategory, order))\n      : setEmployees(prev => prev.reverse());\n  }\n\n  const handleFilterWord = (input) => {\n    const word = input.trim().toLowerCase();\n    setFilterWord(word.toLowerCase());\n\n    word.length > 2 && filterCategory\n      ? setEmployees(prev => filterEmployees(prev, word, filterCategory))\n      : setEmployees(all);\n  }\n\n  const handleFilterCategory = (category) => {\n    if (category === filterCategory) return;\n\n    setFilterCat(category);\n    \n    if (filterWord.length > 2)\n      setEmployees(prev => filterEmployees(prev, filterWord, category));\n  }\n\n  return (\n    <Container>\n      <Row className='my-3'>\n        <SortOptions\n          sortCategory={sortCategory}\n          sortOrder={sortOrder}\n          handleSort={handleSort}\n          handleOrder={handleOrder}\n        />\n        <FilterInput\n          filterCategory={filterCategory}\n          handleFilterWord={handleFilterWord}\n          handleFilterCategory={handleFilterCategory}\n        />\n      </Row>\n      <Row>\n        <EmployeeTable employees={employees}/>\n      </Row>\n    </Container>\n  )\n}\nexport default App;","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}